Еще одна задачка на фантазию и творчество (я знаю как вы их любите).

Придумайте иерархию, состоящую как минимум из 4 уровней наследования (класс Object и
любой другой родитель из стандартных библиотек Java не считается). Иерархия должна состоять из классов,
как минимум одного интерфейса и как минимум одного абстрактного класса. Использование наследования,
интерфейса и абстрактного класса должно быть уместным и аргументированным, т.е. в письме расскажите,
почему на этом месте цепочки иерархии должен быть именно абстрактный класс/интерфейс, а не что-то другое.
Методы для классов должны соответствовать смыслу класса, но реализация этих методов может быть оставлена пустой,
либо выполнена на ваше усмотрение. По созданию методов/полей можно сильно не угарать, много не нужно,
пусть будет хотя бы 1-2 на каждый класс для примера.



Пример иерархии:

После создания вашей иерархии классов - разработайте класс стек (можно воспользоваться подсказкой в
виде готовой реализации в репозитории
https://gitlab.com/RevRay/smlab-day8/-/tree/main/src/ru/smlab/school/day8/classwork/stackdemo).
Ко всем полям и методам класса стека оставьте подробные javadoc-комментарии
(чтобы я увидел что вы понимаете работу структуры данных, а не просто скопипастили ее из репки выше).
Ваш вариант стека должен уметь хранить в себе объекты одного из самых общих типов из вашей иерархии классов
(1го или 2го уровня).
В отдельном классе в методе main создайте объект стека и наполните его разными объектами типов из вашей иерархии.



После выполнения задания - создайте диаграмму классов (в ИДЕЕ - клик правой кнопкой по корневому пакету,
в котором располагаются классы - пункт меню Diagrams - Show Diagram - Java Classes).
Получившуюся диаграмму заскриншотить и прислать в письме вместе с кодом домашнего задания
(диаграмма будет выглядеть в стиле картинки выше).
//Подсказка для перфекционистов - элементы на сгенерированной диаграмме можно двигать лапками и выровнять как душе угодно.